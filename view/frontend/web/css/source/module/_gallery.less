& when (@media-common = true) {
    .wp-block-gallery,
    .blocks-gallery-grid {
        display: flex;
        flex-wrap: wrap;
        list-style-type: none;
        padding: 0;
        // Some themes give all <ul> default margin instead of padding.
        margin: 0;

        .blocks-gallery-image,
        .blocks-gallery-item {
            // Add space between thumbnails, and unset right most thumbnails later.
            margin: 0 @wp-gap-size @wp-gap-size 0;
            display: flex;
            flex-grow: 1;
            flex-direction: column;
            justify-content: center;
            position: relative;

            figure {
                margin: 0;
                height: 100%;
            }

            img {
                display: block;
                max-width: 100%;
                height: auto;
            }

            // IE doesn't handle cropping, so we need an explicit width here.
            img {
                width: 100%;
            }

            figcaption {
                position: absolute;
                bottom: 0;
                width: 100%;
                max-height: 100%;
                overflow: auto;
                padding: 40px 10px 9px;
                color: @color-white;
                text-align: center;
                font-size: @font-size__base;
                background: linear-gradient(
                    0deg,
                    fade(@color-black, 70%) 0,
                    fade(@color-black, 30%) 70%,
                    transparent
                );

                img {
                    display: inline;
                }
            }
        }

        // Cropped
        &.is-cropped .blocks-gallery-image,
        &.is-cropped .blocks-gallery-item {
            a,
            img {
                // IE11 doesn't support object-fit, so just make sure images aren't skewed.
                // The following rules are for all browsers.
                width: 100%;
            }
        }

        // On mobile and responsive viewports, we allow only 1 or 2 columns at the most.
        .blocks-gallery-image,
        .blocks-gallery-item {
            width: calc(~"50% -" @wp-gap-size);

            &:nth-of-type(even) {
                margin-right: 0;
            }
        }

        &.columns-1 .blocks-gallery-image,
        &.columns-1 .blocks-gallery-item {
            width: 100%;
            margin-right: 0;
        }
    }

    // IE doesn't support flex so omit that.
    @supports (position: sticky) {
        .wp-block-gallery,
        .blocks-gallery-grid {
            .blocks-gallery-image,
            .blocks-gallery-item {
                figure {
                    display: flex;
                    align-items: flex-end;
                    justify-content: flex-start;
                }
            }
        }
    }

    // IE11 doesn't read rules inside this query. They are applied only to modern browsers.
    @supports (position: sticky) {
        .wp-block-gallery,
        .blocks-gallery-grid {
            .blocks-gallery-image,
            .blocks-gallery-item {
                img {
                    width: auto;
                }
            }
        }
    }

    // IE11 doesn't read rules inside this query. They are applied only to modern browsers.
    @supports (object-fit: cover) {
        .wp-block-gallery,
        .blocks-gallery-grid {
            // Cropped
            &.is-cropped .blocks-gallery-image,
            &.is-cropped .blocks-gallery-item {
                a,
                img {
                    height: 100%;
                    flex: 1;
                    object-fit: cover;
                }
            }
        }
    }
}

// Beyond mobile viewports, we allow up to 8 columns.
.media-width(@extremum, @break) when (@extremum = 'min') and (@break = @screen__s) {
    .wp-block-gallery,
    .blocks-gallery-grid {
        .loop-wp-gallery-columns(@i) when (@i > 2) {
            .loop-wp-gallery-columns((@i - 1)); // iteration
            &.columns-@{i} {
                .blocks-gallery-image,
                .blocks-gallery-item {
                    width: calc((100% / @i)~" - "(@wp-gap-size * (@i - 1) / @i));
                    margin-right: @wp-gap-size;
                }
            }
        }
        .loop-wp-gallery-columns(8);

        // Unset the right margin on every rightmost gallery item to ensure center balance.
        .loop-wp-gallery-columns-type(@i) when (@i > 0) {
            .loop-wp-gallery-columns-type((@i - 1)); // iteration
            &.columns-@{i} {
                .blocks-gallery-image:nth-of-type(@{i}),
                .blocks-gallery-item:nth-of-type(@{i}) {
                    margin-right: 0;
                }
            }
        }
        .loop-wp-gallery-columns-type(10);
    }
}

& when (@media-common = true) {
    .wp-block-gallery,
    .blocks-gallery-grid {
        // Last item always needs margins reset.
        .blocks-gallery-image:last-child,
        .blocks-gallery-item:last-child {
            // stylelint-disable-next-line declaration-no-important
            margin-right: 0 !important;
        }

        // Apply max-width to floated items that have no intrinsic width.
        &.alignleft,
        &.alignright {
            max-width: @wp-content-width / 2;
            width: 100%;
        }

        // If the gallery is centered, center the content inside as well.
        &.aligncenter {
            .blocks-gallery-item figure {
                justify-content: center;
            }
        }
    }
}
