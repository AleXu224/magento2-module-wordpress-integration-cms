// stylelint-disable no-descending-specificity

.wp-block-cover-image {
    position: relative;
    background-size: cover;
    background-position: center center;
    min-height: 430px;
    width: 100%;
    margin-top: 2rem;
    margin-bottom: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;

    &.has-left-content {
        justify-content: flex-start;

        h2,
        .wp-block-cover-image-text {
            margin-left: 0;
            text-align: left;
        }
    }

    &.has-right-content {
        justify-content: flex-end;

        h2,
        .wp-block-cover-image-text {
            margin-right: 0;
            text-align: right;
        }
    }

    h2,
    .wp-block-cover-image-text {
        color: #fff;
        font-size: 22px;
        line-height: 1.1;
        z-index: 1;
        margin-bottom: 0;
        max-width: @wp-container-width;
        padding: 1rem;
        text-align: center;

        a,
        a:hover,
        a:focus,
        a:active {
            color: inherit;
        }
    }

    &.has-parallax {
        background-attachment: fixed;
    }

    &.has-background-dim::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background-color: fade(black, 50%);
    }

    .each-bg-dim(10);
    .each-bg-dim(@n, @i: 0) when (@i <= @n) {
        @ix: (@i * 10);
        @ic: (@i * 10%);
        &.has-background-dim.has-background-dim-@{ix}::before {
            background-color: fade(black, @ic);
        }
        .each-bg-dim(@n, (@i + 1)); // iterator
    }

    &.components-placeholder {
        height: inherit;
    }

    // Apply max-width to floated items that have no intrinsic width
    [data-align="left"] &,
    [data-align="right"] &,
    &.alignleft,
    &.alignright {
        max-width: @wp-container-width / 2;
        width: 100%;
    }
}
